from typing import Union

import aiohttp
from aiogram import types
from data.config import DOMAIN
from keyboards.user import inline as inline_keyboard
from filters.is_chat_member import IsChatMember
from loader import api_client, dp


async def fetch_photo_data(photo_url):
    async with aiohttp.ClientSession() as session:
        async with session.get(photo_url) as response:
            if response.status == 200:
                return await response.read()
            else:
                return None


WELCOME_MESSAGE = """
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {full_name}!

–¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –Ω–∞—à–∞ <b>–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è [name]</b>, –≥–¥–µ –º—ã —Ä–µ–∞–ª–∏–∑—É–µ–º –±—É–¥—É—â–∏–µ —Ç–∞–ª–∞–Ω—Ç—ã ;)
"""

FREE_MESSAGE = """
–ü–æ–ª—É—á–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π –≤–µ–∫—Ç–æ—Ä –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! 

<b>–ù–∞—á–∞–ª—å–Ω—ã–π –≤–µ–∫—Ç–æ—Ä</b> - —Ç–æ—á–∫–∞, –æ—Ç–∫—É–¥–∞ –Ω—É–∂–Ω–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –≤ —Å–≤–æ–µ–π –æ–±–ª–∞—Å—Ç–∏. 

–ù–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –º—ã

‚úîÔ∏è –ü—Ä–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —ç—Ä—É–¥–∏—Ü–∏—é –∏ –ø–æ–¥–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø—Ä–æ—Ñ–µ—Å–∏–∏—é
‚úîÔ∏è –†–µ—à–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏
‚úîÔ∏è –û–±—É—á–∞–µ–º –Ω–æ–≤—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –∏ –ø–æ–¥–±–∏—Ä–∞–µ–º –ª–∏—á–Ω—ã–π <b>RoadMap</b>

üë®‚Äçüè´ @belofflab
"""


@dp.message_handler(commands="start")
async def start(
    message: Union[types.Message, types.CallbackQuery], course="None", **kwargs
) -> None:
    api_client.make_request(
        "POST",
        endpoint="users/",
        user_id=message.from_user.id,
        data={"idx": message.from_user.id, "username": message.from_user.username},
    )
    if isinstance(message, types.Message):
        await message.answer_photo(
            photo=await fetch_photo_data("https://" + DOMAIN + "/media/banner.png"),
            caption=WELCOME_MESSAGE.format(full_name=message.from_user.full_name),
            reply_markup=inline_keyboard.menu(),
        )
    elif isinstance(message, types.CallbackQuery):
        message: types.CallbackQuery
        new_media = types.InputMediaPhoto(
            media="https://" + DOMAIN + "/media/banner.png",
            caption=WELCOME_MESSAGE.format(full_name=message.from_user.full_name),
        )
        await message.message.edit_media(
            media=new_media,
            reply_markup=inline_keyboard.menu(),
        )


@dp.callback_query_handler(lambda c: c.data == "free")
async def free(callback: types.CallbackQuery):
    await callback.message.edit_caption(
        caption=FREE_MESSAGE,
        reply_markup=types.InlineKeyboardMarkup(row_width=1).add(
            types.InlineKeyboardButton(
                text="–ù–∞–∑–∞–¥", callback_data=inline_keyboard.make_courses_cd(0)
            )
        ),
    )
